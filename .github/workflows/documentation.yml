name: Documentation Deploy

on:
  push:
    branches: ["dev", "documentation/197-autodeploy-of-documentations-and-javadocs-to-github-pages"]

env:
  INSTANCE: 'Writerside/documentation'
  DOCKER_VERSION: '243.22562'

jobs:
  documentation:
    runs-on: ubuntu-latest
    outputs:
      artifact: ${{ steps.define-ids.outputs.artifact }}
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
        with:
          gradle-version: 8.9

      - name: Build Common Documentation
        working-directory: common
        run: |
          gradle javadoc
          mkdir -p ../pages-out/java-docs/common/
          mv build/docs/javadoc* ../pages-out/java-docs/common/
        # zip -r build/docs/common-javadocs.zip build/docs/* 

      - name: Build Client Documentation
        working-directory: fantasychess-client
        run: |
          gradle javadoc
          mkdir -p ../pages-out/java-docs/client/html/
          mkdir -p ../pages-out/java-docs/client/core/
          mv html/build/docs/* ../pages-out/java-docs/client/html/
          mv core/build/docs/* ../pages-out/java-docs/client/core/
        # zip -r html/build/docs/client-html-javadocs.zip html/build/docs/* 
        # zip -r core/build/docs/client-core-javadocs.zip core/build/docs/* 

      - name: Build Server Documentation
        working-directory: fantasychess-server
        run: |
          gradle javadoc
          mkdir -p ../pages-out/java-docs/server/
          mv build/docs/javadoc* ../pages-out/java-docs/server/
        #  zip -r build/docs/server-javadocs.zip build/docs/* 

      - name: Define instance id and artifacts
        id: define-ids
        run: |
          INSTANCE=${INSTANCE#*/}
          INSTANCE_ID_UPPER=$(echo "$INSTANCE" | tr '[:lower:]' '[:upper:]')
          ARTIFACT="webHelp${INSTANCE_ID_UPPER}2-all.zip"
          ALGOLIA_ARTIFACT="algolia-indexes-${INSTANCE_ID_UPPER}.zip"
      
          # Print the values
          echo "INSTANCE_ID_UPPER: $INSTANCE_ID_UPPER"
          echo "ARTIFACT: $ARTIFACT"
          echo "ALGOLIA_ARTIFACT: $ALGOLIA_ARTIFACT"
      
          # Set the environment variables and outputs
          echo "INSTANCE_ID_UPPER=$INSTANCE_ID_UPPER" >> $GITHUB_ENV
          echo "ARTIFACT=$ARTIFACT" >> $GITHUB_ENV
          echo "ALGOLIA_ARTIFACT=$ALGOLIA_ARTIFACT" >> $GITHUB_ENV
          echo "artifact=$ARTIFACT" >> $GITHUB_OUTPUT
          echo "algolia_artifact=$ALGOLIA_ARTIFACT" >> $GITHUB_OUTPUT

      - name: Build docs using Writerside Docker builder
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          docker-version: ${{ env.DOCKER_VERSION }}
          location: documentation/Writerside

      - name: Save artifact with build results
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: |
            artifacts/${{ steps.define-ids.outputs.artifact }}
            artifacts/report.json
            artifacts/${{ steps.define-ids.outputs.algolia_artifact }}
          retention-days: 7
      
      - name: Unzip and Move
        run : unzip -O UTF-8 -qq "artifacts/${{ steps.define-ids.outputs.artifact }}" -d pages-out/

      - name: Push to branch
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: gh-pages # The branch name where you want to push the assets
          FOLDER: pages-out/ # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message