buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    maven { url "https://jitpack.io/" }
    gradlePluginPortal()
    mavenLocal()
    google()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
  }
  dependencies {
    classpath "org.docstr:gwt-gradle-plugin:$gwtPluginVersion"
    classpath "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
  }
}
project.ext.texturePacker = [ "assets/tileset/", "assets", "auto-generated-atlas.atlas" ]

import com.badlogic.gdx.tools.texturepacker.TexturePacker


task texturePacker {
  doLast {
    if (project.ext.has('texturePacker')) {
      logger.info "Calling TexturePacker: "+texturePacker
      TexturePacker.process(texturePacker[0], texturePacker[1], texturePacker[2])
    }
  }
}

allprojects {
  apply plugin: 'eclipse'
  apply plugin: 'idea'

  // This allows you to "Build and run using IntelliJ IDEA", an option in IDEA's Settings.
  idea {
    module {
      outputDir file('build/classes/java/main')
      testOutputDir file('build/classes/java/test')
    }
  }
}

configure(subprojects) {
  apply plugin: 'java-library'
  sourceCompatibility = 11
  compileJava {
    options.incremental = true
  }
  // From https://lyze.dev/2021/04/29/libGDX-Internal-Assets-List/
  // The article can be helpful when using assets.txt in your project.
  compileJava.doLast {
    // projectFolder/assets
    def assetsFolder = new File("${project.rootDir}/assets/")
    // projectFolder/assets/assets.txt
    def assetsFile = new File(assetsFolder, "assets.txt")
    // delete that file in case we've already created it
    assetsFile.delete()

    // iterate through all files inside that folder
    // convert it to a relative path
    // and append it to the file assets.txt
    fileTree(assetsFolder).collect { assetsFolder.relativePath(it) }.each {
      assetsFile.append(it + "\n")
    }
  }
}

subprojects {
  version = '$projectVersion'
  ext.appName = 'fantasychess-client'
  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    // You may want to remove the following line if you have errors downloading dependencies.
    mavenLocal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }
  }
}

eclipse.project.name = 'fantasychess-client' + '-parent'
